/** @file
*  Multiple APIC Description Table (MADT)
*
*  Copyright (c) 2012 - 2014, ARM Limited. All rights reserved.
*  Copyright (c) 2015, Linaro Limited. All rights reserved.<BR>
*  Copyright 2017-2018 NXP
*
*  This program and the accompanying materials
*  are licensed and made available under the terms and conditions of the BSD License
*  which accompanies this distribution.  The full text of the license may be found at
*  http://opensource.org/licenses/bsd-license.php
*
*  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
*  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
*
*  Based on the files under ArmPlatformPkg/ArmJunoPkg/AcpiTables/
*
**/

#include "Platform.h"

#include <Library/AcpiLib.h>
#include <Library/ArmLib.h>
#include <Library/PcdLib.h>
#include <IndustryStandard/Acpi.h>
#include <IndustryStandard/Acpi61.h>

//
// Multiple APIC Description Table
//
#pragma pack (1)

typedef struct {
  EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER   Header;
  EFI_ACPI_6_1_GIC_STRUCTURE                            GicInterfaces[16];
  EFI_ACPI_6_1_GIC_DISTRIBUTOR_STRUCTURE                GicDistributor;
  EFI_ACPI_6_1_GICR_STRUCTURE				Gicr;
  EFI_ACPI_6_1_GIC_ITS_STRUCTURE			GicITS;
} EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE;

#pragma pack ()

EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE Madt = {
  {
    ARM_ACPI_HEADER (
      EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE_SIGNATURE,
      EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE,
      EFI_ACPI_6_1_MULTIPLE_APIC_DESCRIPTION_TABLE_REVISION
    ),
    //
    // MADT specific fields
    //
    0, // LocalApicAddress
    0, // Flags
  },
  {
   // Format: EFI_ACPI_6_1_GICC_STRUCTURE_INIT(GicId, AcpiCpuUid, Mpidr, Flags, PmuIrq, GicBase,
	// GicVBase, GicHBase, GsivId, GicRBase, Efficiency)
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(0, 0, GET_MPID(0, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(1, 1, GET_MPID(0, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(2, 2, GET_MPID(1, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(3, 3, GET_MPID(1, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(4, 4, GET_MPID(2, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(5, 5, GET_MPID(2, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(6, 6, GET_MPID(3, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(7, 7, GET_MPID(3, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(8, 8, GET_MPID(4, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(9, 9, GET_MPID(4, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(10, 10, GET_MPID(5, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(11, 11, GET_MPID(5, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(12, 12, GET_MPID(6, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(13, 13, GET_MPID(6, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(14, 14, GET_MPID(7, 0),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
	EFI_ACPI_6_0_GICC_STRUCTURE_INIT(15, 15, GET_MPID(7, 1),EFI_ACPI_6_0_GIC_ENABLED, 23, GICC_BASE,
						GICV_BASE, GICH_BASE, 0x19, 0, 0),
  },
  EFI_ACPI_6_0_GIC_DISTRIBUTOR_INIT(0, GICD_BASE, 0, GIC_VERSION),
  /* GIC Redistributor */
  {
    EFI_ACPI_6_1_GICR,                         // UINT8 Type
    sizeof(EFI_ACPI_6_1_GICR_STRUCTURE),       // UINT8 Length
    EFI_ACPI_RESERVED_WORD,                    // UINT16 Reserved
    GICR_BASE,  // UINT64 DiscoveryRangeBaseAddress
    GICR_LEN,                                // UINT32 DiscoveryRangeLength
  },
  /* GIC ITS */
  {
    EFI_ACPI_6_1_GIC_ITS,
    sizeof(EFI_ACPI_6_1_GIC_ITS_STRUCTURE),
    EFI_ACPI_RESERVED_WORD,
    0,
    GICI_BASE,
    EFI_ACPI_RESERVED_DWORD,
  }
};

//
// Reference the table being generated to prevent the optimizer from removing the
// data structure from the executable
//
VOID* CONST ReferenceAcpiTable = &Madt;
